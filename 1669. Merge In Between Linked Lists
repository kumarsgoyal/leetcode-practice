/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) {
        ListNode curr = list1;
        int diff = b - a;

        while(curr != null && a > 1) {
            curr = curr.next;
            a--;
        }

        ListNode ptr1 = curr.next;
        curr.next = list2;
        curr = curr.next;

        while(curr != null && curr.next != null) {
            curr = curr.next;
        }

        while(ptr1 != null && diff >= 0) {
            ptr1 = ptr1.next;
            diff--;
        }

        curr.next = ptr1;

        return list1;
    }
}
