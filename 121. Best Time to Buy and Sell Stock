// space: O(1)
// time: O(N)

class Solution {
    public int maxProfit(int[] prices) {
        int profit = 0;
        int min = prices[0];

        for(int i = 1; i < prices.length; i++) {
            if(prices[i] < min)
                min = prices[i];
            else
                profit = Math.max(profit, prices[i] - min);
        }

        return profit;
    }
}


/*

// brute
// time: O(N^2)
// space: O(1)

class Solution {
    public int maxProfit(int[] prices) {
        int profit = 0;

        for(int i = 0; i < prices.length; i++) {
            for(int j = i + 1; j < prices.length; j++) {
                profit = Math.max(profit, prices[j] - prices[i]);
            }
        }

        return profit;
    }
}

*/
