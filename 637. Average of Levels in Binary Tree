/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {
        List<Double> res = new LinkedList<> ();
        
        if(root == null)    
            return res;
        
        Queue<TreeNode> que = new LinkedList<> ();
        que.add(root);
        
        while(que.isEmpty() == false) {
            int size = que.size();
            int count = size;
            double sum = 0;
            while(size > 0) {
                TreeNode temp = que.remove();
                sum += temp.val;
                if(temp.left != null)  
                    que.add(temp.left);
                if(temp.right != null) 
                    que.add(temp.right);
                size--;
            }
            
            res.add(sum / count);
        }
        
        return res;
    }
}
