/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int rootToLeaf = 0;
    
    public void preorder(TreeNode root, int curr) {
        if(root != null) {
            curr = (curr << 1) | root.val;
            if(root.left == null && root.right == null) {
                rootToLeaf += curr;
            }
            preorder(root.left, curr);
            preorder(root.right, curr);
        }
    }
    
    public int sumRootToLeaf(TreeNode root) {
        preorder(root, 0);
        return rootToLeaf;
    }
}


/*

class Solution {
    private int sum = 0;
    public int sumRootToLeaf(TreeNode root) {
        sumRootToLeafUtil(root, 0);
        return sum;
    }

    private void sumRootToLeafUtil(TreeNode root, int num) {
        if(root == null) 
            return;

        if(root.left == null && root.right == null) {
            sum += ((num << 1) | root.val);
        }

        int temp1 = num;
        int temp2 = num;
        sumRootToLeafUtil(root.left, (temp1 << 1) | root.val); 
        sumRootToLeafUtil(root.right, (temp2 << 1) | root.val); 
    }
}
*/
