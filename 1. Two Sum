// space: O(N)
// time: O(N)

class Solution {
    public int[] twoSum(int[] nums, int target) {   
        int[] result = new int[2];
        HashMap<Integer, Integer> hashMap = new HashMap<> ();

        hashMap.put(nums[0], 0);

        for(int i = 1; i < nums.length; i++) {
            int num1 =  target - nums[i];
            if(hashMap.containsKey(num1)) {
                result[0] = hashMap.get(num1);
                result[1] = i;
                break;
            }
            hashMap.put(nums[i], i);
        }

        return result;
    }
}


/*

// space: O(1)
// time: O(N^2)

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int[] result = new int[2];

        for(int i = 0; i < nums.length; i++) {
            for(int j = i + 1; j < nums.length; j++) {
                if((nums[i] + nums[j]) == target) {
                    result[0] = i;
                    result[1] = j;
                    return result;
                }
            }
        }

        return result;
    }
}


*/
