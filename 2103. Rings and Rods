class Solution {
    private static final int LENGTH = 10;
    public int countPoints(String rings) {
        int[] arr = new int[LENGTH];
        int count = 0;

        for(int i = 0; i < rings.length(); i += 2) {
            arr[rings.charAt(i + 1) - '0'] |= rings.charAt(i) == 'R' ? 1 : rings.charAt(i) == 'G' ? 2 : 4;
        }

        for(int i = 0; i < LENGTH; i++) {
            if(arr[i] == 7)
                count++;
        }
        
        return count;
    }
}


/*

class Solution {
    private static final int LENGTH = 10;
    private static final int COLOR = 3;
    public int countPoints(String rings) {
        Set<Character>[] arr = new HashSet[LENGTH];
        int count = 0;

        for (int i = 0; i < LENGTH; i++) {
            arr[i] = new HashSet<> ();
        }

        for(int i = 0; i < rings.length(); i+=2) {
            arr[rings.charAt(i + 1) - '0'].add(rings.charAt(i));
        }

        for (int i = 0; i < LENGTH; i++) {
            if(arr[i].size() == COLOR) {
                count++;
            }
        }

        return count;
    }
}

*/
