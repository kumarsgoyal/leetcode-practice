

/*class Tree{
int data;
    Tree left;
    Tree right;
    Tree(int d){
        data=d;
        left=null;
        right=null;
    }
}

class Node {
    int data;
    Node next;
    Node(int d) {
        data = d;
        next = null;
    }
}*/


class GfG  {
    //Function to make binary tree from linked list.
    public static Tree convert(Node head, Tree node) {
        return convertUtil(head);
    }
    
    private static Tree convertUtil(Node head) {
        if(head == null) {
            return null;
        }
        
        Queue<Tree> que = new LinkedList<Tree> ();
        Tree result = new Tree(head.data);
        que.add(result);
        head = head.next;
        
        while(head != null) {
            Tree temp = que.poll();
            
            temp.left = new Tree(head.data);
            que.add(temp.left);
            head = head.next;
            
            if(head != null) {
                temp.right = new Tree(head.data);
                que.add(temp.right);
                head = head.next;
            }
        }
        que.clear();
        
        return result;
    }
}  
