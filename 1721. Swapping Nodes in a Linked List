/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapNodes(ListNode head, int k) {
        return swapNodesUtil(head, k);
    }

    private ListNode swapNodesUtil(ListNode head, int k) {
        ListNode n1 = null, n2 = null;
        ListNode curr = head;

        while(curr != null) {
            n2 = (n2 == null) ? null : n2.next;
            if(--k == 0) {
                n2 = head;
                n1 = curr;
            }
            curr = curr.next;
        }

        int temp = n1.val;
        n1.val = n2.val;
        n2.val = temp;

        return head;
    }

}
