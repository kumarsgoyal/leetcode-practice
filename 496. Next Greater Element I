class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        Map<Integer, Integer> map = storeValueInMapForFastAccess(nums2);
        int[] nextGreaterElementArray = nextGreaterElementUtil(nums2);

        int[] result = new int[nums1.length];
        for(int i = 0; i < nums1.length; i++) {
            result[i] = nextGreaterElementArray[map.get(nums1[i])];
        }

        return result;
    }

    private Map<Integer, Integer> storeValueInMapForFastAccess(int[] arr) {
        Map<Integer, Integer> map = new HashMap<> ();
        
        for(int i = 0; i < arr.length; i++) {
            map.put(arr[i], i);
        }

        return map;
    }

    private int[] nextGreaterElementUtil(int[] arr) {
        int[] result = new int[arr.length];
        Stack<Integer> stack = new Stack<> ();

        for(int i = 0; i < arr.length; i++) {
            while(!stack.empty() && arr[stack.peek()] < arr[i])
                result[stack.pop()] = arr[i];
            stack.push(i);
        }

        while(!stack.empty()) {
            result[stack.pop()] = -1;
        }

        return result;
    }
}
